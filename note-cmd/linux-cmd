linux上安装java jdk：
1、 解压压缩包： $ tar zxvf jdk-8u121-linux-x64.tar.gz
2、 设置环境变量 ：$ sudo vi /etc/profile
    在文件最后，添加如下内容： 
    #Java Env
    export JAVA_HOME=/usr/jdk1.8.0_121
    export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar
    export PATH=$PATH:$JAVA_HOME/bin
3、 使环境变量设置立即生效
    $ source /etc/profile
4、 查看JDK版本
    $ java -version
    
5、 https://blog.csdn.net/pan_xi_yi/article/details/83513021
    https://blog.csdn.net/huang3513/article/details/52837075


6、 git add . （注：别忘记后面的.，此操作是把Test文件夹下面的文件都添加进来）
    git commit  -m  "提交信息"  （注：“提交信息”里面换成你需要，如“first commit”
    git push -u origin master   （注：此操作目的是把本地仓库push到github上面，此步骤需要你输入帐号和密码）

7.1、截取时间段
截取 2019-06-25 10:10 到 2019-06-25 10:20 之间的日志记录，apollo-service.log 为你要截取的文件名称， new2.log 截取之后保存日志的文件名称。
sed -n '/2019-06-25 10:10/, /2019-06-25 10:20/p' catalina.out  > new1.log
sed -n '/2019-06-25 10:20:47/, /2019-06-25 10:26:47/p' catalina.out  > new2.log
sed -n '/2019-06-25 10:20:47.728/, /2019-06-25 10:26:47.728/p' catalina.out  > new3.log

说明：时间段可根据自己的需要进行修改，可精确到毫秒。

7.2、截取行数

grep -n "要查询的关键字"  xxxx.file
截取 catalina.out  文件中的100 - 500 行的日志， new.log 为截取保存之后的文件。
sed -n '100,500'p apollo-service.log > new.log


8、
查找目录： find /(查找范围) -name '查找关键字' -typed
查找文件： find /(查找范围) -name '查找关键字' -print

9、
   scp 本地用户名@IP地址:文件名1 远程用户名@IP地址:文件名2
    -v 和大多数linux命令中的-v意思一样,用来显示进度.可以用来查看连接,认证,或是配置错误.   
    -C 使能压缩选项.   
    -P 选择端口.注意-p已经被rcp使用.   
    -4 强行使用IPV4地址.   
    -6 强行使用IPV6地址.
   scp -P 端口号 file username@ip:filepath
   
#如果它是基于UNIX的系统，则可以在ssh上使用tar。  
-以下命令压缩所有文件和文件夹。
tar -cvf-/ home | ssh root@192.168.1.1 tar -xvf--C /
-传输并在第二台计算机上解压缩。
这比仅按scp复制要快得多
#实例
tar -cvf /e/ZeroNet/data | ssh root@192.168.1.253 tar -xvf -C /mnt/sda1/home/data

10、
下载相应的模块：
pip download \
    --only-binary=:all: \ # 对于包以及包的依赖包，都不使用二进制
    --platform linux_x86_64 \  # 指定系统环境
    -d \home\packs   # 下载的文件的存储目录
    -r requirement.txt    # 指定要下载的包
python 下载并安装模块：
    pip install -t D:\python3.5(32bit)\Lib\site-packages -i https://pypi.douban.com/simple PyInstaller
pip show xxx 显示安装模块安装的位置
   
    
