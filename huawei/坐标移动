/*
题目描述
开发一个坐标计算工具， A表示向左移动，D表示向右移动，W表示向上移动，S表示向下移动。从（0,0）点开始移动，从输入字符串里面读取一些坐标，并将最终输入结果输出到输出文件里面。
 
输入：
 
合法坐标为A(或者D或者W或者S) + 数字（两位以内）
 
坐标之间以;分隔。
 
非法坐标点需要进行丢弃。如AA10;  A1A;  $%$;  YAD; 等。
 
下面是一个简单的例子 如：
 
A10;S20;W10;D30;X;A1A;B10A11;;A10;
 
处理过程：
 
起点（0,0）
 
+   A10   =  （-10,0）
 
+   S20   =  (-10,-20)
 
+   W10  =  (-10,-10)
 
+   D30  =  (20,-10)
 
+   x    =  无效
 
+   A1A   =  无效
 
+   B10A11   =  无效
 
+  一个空 不影响
 
+   A10  =  (10,-10)
 
 
 
结果 （10， -10）

输入描述:
一行字符串
输出描述:
最终坐标，以,分隔
*/

网址：https://www.nowcoder.com/practice/119bcca3befb405fbe58abe9c532eb29?tpId=37&tqId=21240&tPage=1&rp=&ru=/ta/huawei&qru=/ta/huawei/question-ranking

解题思路：
；；中间的数据做判断，注意char 转换为 int；
代码：
#include<iostream>
#include<string>
using namespace std;
int judge(string str,int &c_i)
{
    bool flag = true;
    int i = 1;
    int ret = 0;
    if (str[c_i] == ';')
        return ret;
    while (str[c_i + i] != ';')
    {
        if (str[c_i + i] < '0' || str[c_i + i] > '9')
            flag = false;
        i ++;
    }
    if (flag)
    {
        if (i == 2)
            ret = str[c_i + 1] - '0';
        else if (i == 3)
            ret = (str[c_i + 1] - '0')*10 + str[c_i + 2] - '0';
    }
    c_i += i;
    return ret;

}
int main()
{
    string str;
    int x , y ;

    while (getline(cin ,str ))
    {
        int c_i = 0;
        x = 0;
        y = 0;
        while (c_i < str.length())
        {
            switch(str[c_i])
            {
            case 'A':
                x -= judge(str,c_i);
                break;
            case 'D':
                x += judge(str,c_i);
                break;
            case 'W':
                y += judge(str,c_i);
                break;
            case 'S':
                y -= judge(str,c_i);
                break;
            default:
                judge(str,c_i);
                break;
            }
            c_i ++;
        }//while
        cout << x <<','<<y<<endl;
    }
    return 0;
}
