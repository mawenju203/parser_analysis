题目描述
编写一个程序，将输入字符串中的字符按如下规则排序。
规则 1 ：英文字母从 A 到 Z 排列，不区分大小写。
       如，输入： Type   输出： epTy
规则 2 ：同一个英文字母的大小写同时存在时，按照输入顺序排列。
     如，输入： BabA   输出： aABb
规则 3 ：非英文字母的其它字符保持原来的位置。
     如，输入： By?e   输出： Be?y
样例：
    输入：
   A Famous Saying: Much Ado About Nothing(2012/8).
    输出：
   A aaAAbc dFgghh: iimM nNn oooos Sttuuuy (2012/8).
   
   网址：https://www.nowcoder.com/practice/5190a1db6f4f4ddb92fd9c365c944584?tpId=37&tqId=21249&tPage=2&rp=&ru=/ta/huawei&qru=/ta/huawei/question-ranking
   
   解题思路：
   为了避免时间复杂度，选择牺牲内存的方式，再者遇到的是A a 的问题，
   因为排序针对A~Z, a~z,所以需要string 类型的26个，存储，获得正确的排序，然后就是复制到原字符上即可！
   时间复杂度为O（n），空间复杂度为最大 O（n * n）；
   
   coding：
#include<iostream>
#include<string>

using namespace std;

int main ()
{

    string str;
    while (getline(cin, str))
    {
        string strbuf[26] ;
        string count_end = "";
        int c_i = 0;
        while (c_i < str.length())
        {
            if (str[c_i] >='A' && str[c_i] <= 'Z')
                strbuf[str[c_i] - 'A'] += str[c_i];
            else if (str[c_i] >='a' && str[c_i] <= 'z')
                strbuf[str[c_i] - 'a'] += str[c_i];
            c_i ++;
        }
        c_i = 0;
        while (c_i < 26)
        {
            if (strbuf[c_i].length())
                count_end += strbuf[c_i];
            c_i ++;
        }
        c_i = 0;
        int c_j = 0;
        while (c_i < str.length())
        {
            if ((str[c_i] >='A' && str[c_i] <= 'Z') || (str[c_i] >='a' && str[c_i] <= 'z'))
            {
                str[c_i] = count_end[c_j];
                c_i ++;
                c_j ++;
            }
            else
                c_i ++;
        }

        cout << str << endl;

    }
    return 0;
}
