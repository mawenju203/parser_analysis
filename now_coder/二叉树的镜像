题目描述
操作给定的二叉树，将其变换为源二叉树的镜像。
输入描述:
二叉树的镜像定义：源二叉树 
    	    8
    	   /  \
    	  6   10
    	 / \  / \
    	5  7 9 11
    	镜像二叉树
    	    8
    	   /  \
    	  10   6
    	 / \  / \
    	11 9 7  5

网址：https://www.nowcoder.com/practice/564f4c26aa584921bc75623e48ca3011?tpId=13&tqId=11171&tPage=1&rp=1&ru=/ta/coding-interviews&qru=/ta/coding-interviews/question-ranking

coding：
/*
struct TreeNode {
	int val;
	struct TreeNode *left;
	struct TreeNode *right;
	TreeNode(int x) :
			val(x), left(NULL), right(NULL) {
	}
};*/
class Solution {
public:
    //递归遍历的思想
    void Mirror(TreeNode *pRoot) {
        if (pRoot != NULL)
        {
            TreeNode *p = NULL ;
            p = pRoot->left ;
            pRoot->left = pRoot->right ;
            pRoot->right = p ;
            Mirror(pRoot->left) ;
            Mirror(pRoot->right) ;
        }
    }
    //使用先进先出的容器queue ，实现 按层遍历；
    void Mirror(TreeNode *pRoot) {
        if (pRoot == NULL)
            return ;
        queue<TreeNode *> ret;
        ret.push(pRoot) ;
        TreeNode * tmp = NULL ;
        TreeNode * fs = NULL ;
        while (!ret.empty())
        {
            fs = ret.front() ;
            tmp = fs->left ;
            fs->left = fs->right ;
            fs->right = tmp ;
            if (fs->left != NULL)
                ret.push(fs->left) ;
            if (fs->right != NULL)
                ret.push(fs->right) ;
            ret.pop() ;
        }
    }
};
