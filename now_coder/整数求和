题目描述
给定整数n，取若干个1到n的整数可求和等于整数m，编程求出所有组合的个数。比如当n=6，m=8时，有四种组合：[2,6], [3,5], [1,2,5], [1,3,4]。限定n和m小于120
输入描述:
整数n和m
输出描述:
求和等于m的所有组合的个数。

网址：https://www.nowcoder.com/practice/6701fc9b1be84bafac1091705df2e0b4?tpId=90&&tqId=30933&rp=14&ru=/activity/oj&qru=/ta/2018test/question-ranking

解题思路：
动态规划:
贪吃法需要 ：n!可以选择动态规划；
判断条件：　ｃ＿ｊ＞　ｃ＿ｉ　；　ｄｐ［ｃ＿ｊ］　＋＝　ｄｐ［ｃ＿ｊ　－　ｃ＿ｉ］；ｆｏｒ　（ｃ＿ｊ　＝　ｍ　；　ｃ＿ｊ　＞　ｃ＿ｉ　；　ｃ＿ｊ　－－）
时间复杂度为O(n *　m)　；　空间复杂度O(m)　；



coding：
#include<iostream>
#include<vector>
using namespace std ;
int midPlus(int num , int m)
{
    int ret = (num + 1) * num / 2 ;
    return ret > m ? m : ret ;
}
int main()
{
    int  m , n ;
    int c_i , c_j ;
    int tmp ;
    vector<long long> ret(120 , 0) ;
    while (cin >> n >> m)
    {
        for (c_i = 1 ; c_i <= n; c_i ++)
        {
            tmp = midPlus(c_i , m) ;
            for (c_j = tmp ; c_j >= c_i ; c_j --)
                ret[c_j] += ret[c_j - c_i] ;
            ret[c_i] += 1 ;
        }
        cout << ret[m] << endl ;
        c_i = 1 ;
        while (c_i <= m)
            ret[c_i ++] = 0 ;
    }
    return 0 ;
}
