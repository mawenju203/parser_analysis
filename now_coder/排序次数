题目描述
小摩有一个N个数的数组，他想将数组从小到大 排好序，但是萌萌的小摩只会下面这个操作：
任取数组中的一个数然后将它放置在数组的最后一个位置。
问最少操作多少次可以使得数组从小到大有序？
输入描述:
首先输入一个正整数N，接下来的一行输入N个整数。(N <= 50, 每个数的绝对值小于等于1000)
输出描述:
输出一行操作数


网址：https://www.nowcoder.com/practice/1712e1cb393b499ba52036b702990839?tpId=90&&tqId=30893&rp=10&ru=/activity/oj&qru=/ta/2018test/question-ranking

解题思路：只要判断前面的数据是否大于后面的数据即可；

例如： 19 4 7 29 14 20
1: 19 > 4 ;
19 4 7 29 14 20 19;
遍历顺序为：数组的长度（初始化的长的）；每次遍历的为vector的最新长度；
时间复杂度为：O(n * 2n)； 空间复杂度为O(2n)；

coding：
#include <iostream>
#include <vector>
 
using namespace std ;
int main(){
    int n;
    cin>>n;
    vector<int> res(n);
    for(int i=0; i<n; i++)
        cin>>res[i];
    int count=0;
    for(int i=0; i<n; i++){
        for(int j=i+1; j<res.size();j++){
            if(res[i] >res[j]){
                count++;
                res.push_back(res[i]);
                break;
            }
        }
    }
    cout<<count;
    return 0;
}
